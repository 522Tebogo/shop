<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--一定要写对-->
<mapper namespace="com.work.work.mapper.OrderMapper">
    <insert id="insertOrder" parameterType="com.work.work.entity.Order">
        INSERT INTO orders (userid, order_code, totalPrice, create_time, address_id, receiver, phone, address)
        VALUES (#{userId}, #{orderCode}, #{totalPrice}, NOW(), #{addressId}, #{receiver}, #{phone}, #{address})
    </insert>

    <update id="insertCode">
        UPDATE wn_caritem
        SET code = #{orderCode}
        WHERE userid = #{userId} AND code is null
    </update>

    <select id="getOrderListByUserId" resultType="com.work.work.entity.Order"> <!-- 建议添加 resultType -->
        SELECT * from orders WHERE userid = #{userId} ORDER BY create_time DESC <!-- 建议添加排序 -->
    </select>

    <select id="getGoodsByOrderCode" parameterType="long" resultType="com.work.work.entity.Goods">
        SELECT goods.id, goods.name, goods.NormalPrice, goods.SurprisePrice, goods.imageUrl, goods.description, goods.category,wn_caritem.num
        FROM goods
                 INNER JOIN wn_caritem ON goods.id = wn_caritem.goodid
        WHERE wn_caritem.code = #{orderCode}
    </select>

    <select id="getOrderByOrderCode" resultType="com.work.work.entity.Order"> <!-- 建议添加 resultType -->
        SELECT * FROM orders WHERE order_code = #{orderCode}
    </select>

    <delete id="deleteCarItemByCodeAndUserId">
        DELETE FROM wn_caritem WHERE code = #{orderCode} AND userid = #{userId}
    </delete>

    <delete id="deleteOrderByCodeAndUserId">
        DELETE FROM orders WHERE order_code = #{orderCode} AND userid = #{userId}
    </delete>

    <update id="updateCarItemQuantity">
        UPDATE wn_caritem
        SET num = #{quantity}
        WHERE userid = #{userId} AND goodid = #{goodId} AND code = #{orderCode}
    </update>

    <update id="updateOrderTotalPrice">
        UPDATE orders
        SET totalPrice = #{totalPrice}
        WHERE order_code = #{orderCode}
    </update>

    <!-- 修改这里的 id 以匹配 OrderMapper.java 中的方法名 -->
    <select id="getAllOrdersForAdmin" resultType="com.work.work.entity.Order">
        SELECT o.id,
        o.userid AS userId,  <!-- 显式映射到驼峰命名的实体字段 -->
        u.account AS userAccount,
        o.order_code AS orderCode,
        o.totalPrice,
        o.create_time AS createTime,
        o.status
        FROM orders o
        LEFT JOIN wn_user u ON o.userid = u.id
        WHERE payed = 1<!-- 使用 LEFT JOIN 以防用户被删除但订单仍需显示 -->
        ORDER BY o.create_time DESC
    </select>
    <select id="getCodeNum">
        SELECT num FROM wn_caritem WHERE userid = #{userid} AND goodid = #{goodid} AND code  = #{orderCode}
    </select>

    <select id="getGoodIdByCode">
        SELECT goodid FROM wn_caritem WHERE code = #{orderCode}
    </select>
    <update id="updateOrderStatus">
        UPDATE orders
        SET status = #{status}
        WHERE order_code = #{orderCode}
    </update>
    <select id="getPriceByCode">
        SELECT totalPrice FROM orders WHERE order_code = #{orderCode}
    </select>
    <update id="setPayed">
        UPDATE orders
        SET payed = 1
        WHERE order_code = #{orderCode}
    </update>
</mapper>