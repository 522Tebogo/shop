<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--一定要写对-->
<mapper namespace="com.work.work.mapper.UserMapper">
    <!--根据用户账号名称获取用户-->
    <select id="getUserByAccount"
            resultType="com.work.work.entity.User">
        select * from wn_user where account = #{account}
    </select>

    <!--根据手机号获取用户-->
    <select id="getUserByPhone"
            resultType="com.work.work.entity.User">
        select * from wn_user where telphone = #{phone} limit 1
    </select>

    <!--根据手机号获取所有用户（可能有多个）-->
    <select id="getUsersByPhone"
            resultType="com.work.work.entity.User">
        select * from wn_user where telphone = #{phone}
    </select>

    <!--检查手机号是否存在-->
    <select id="checkPhoneExists" resultType="boolean">
        select count(*) > 0 from wn_user where telphone = #{phone}
    </select>

    <!--根据邮箱获取用户-->
    <select id="getUserByEmail"
            resultType="com.work.work.entity.User">
        select * from wn_user where email = #{email}
    </select>

    <!--注册用户 (包含昵称) -->
    <insert id="insertUserWithNickname" parameterType="com.work.work.entity.User">
        INSERT INTO wn_user (account, password, telphone,
                             email, money, points, avatar, reg_time, status, nickname)
        VALUES (#{account}, #{password}, #{telphone}, #{email}, #{money}, #{points}, #{avatar}, #{regTime}, #{status}, #{nickname})
    </insert>

    <!--更新用户信息-->
    <update id="updateUser" parameterType="com.work.work.entity.User">
        UPDATE wn_user
        <set>
            <if test="account != null and account != ''">account = #{account},</if> <!-- 建议加上非空字符串判断 -->
            <if test="telphone != null and telphone != ''">telphone = #{telphone},</if>
            <if test="email != null and email != ''">email = #{email},</if>
            <if test="nickname != null and nickname != ''">nickname = #{nickname},</if>
            <if test="avatar != null and avatar != ''">avatar = #{avatar},</if>
            <if test="status != null and status != ''">status = #{status},</if>
        </set>
        WHERE id = #{id}
    </update>

    <!--更新密码-->
    <update id="updatePassword">
        UPDATE wn_user SET password = #{newPassword} WHERE id = #{id}
    </update>

    <!--更新头像-->
    <update id="updateAvatar">
        UPDATE wn_user SET avatar = #{avatar} WHERE id = #{id}
    </update>

    <!--更新昵称-->
    <update id="updateNickname">
        UPDATE wn_user SET nickname = #{nickname} WHERE id = #{id}
    </update>

    <!--更新手机号-->
    <update id="updatePhone">
        UPDATE wn_user SET telphone = #{phone} WHERE id = #{id}
    </update>

    <!--更新邮箱-->
    <update id="updateEmail">
        UPDATE wn_user SET email = #{email} WHERE id = #{id}
    </update>

    <!-- 注册用户 (设置默认状态并返回ID) -->
    <insert id="registerUserAndGetId" parameterType="com.work.work.entity.User" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO wn_user (account, password, telphone, email, money, points, avatar, reg_time, status)
        VALUES (#{account}, #{password}, #{telphone}, #{email}, #{money}, #{points}, #{avatar}, #{regTime}, 'Y')
    </insert>

    <select id="getAllUser" resultType="com.work.work.entity.User">
        SELECT id, account, password, email, telphone, points, money, avatar,
        reg_time AS regTime, status, last_login_time AS lastLoginTime,
        last_login_ip AS lastLoginIp
        FROM wn_user
        WHERE status != 'D' <!-- 假设 'D' 代表逻辑删除 -->
        ORDER BY id ASC
    </select>

    <select id="getUserById" resultType="com.work.work.entity.User">
        SELECT id, account, password, email, telphone, points, money, avatar,
               reg_time AS regTime, status, last_login_time AS lastLoginTime,
               last_login_ip AS lastLoginIp
        FROM wn_user
        WHERE id = #{userId}
    </select>

    <update id="updateUserStatus" parameterType="com.work.work.entity.User">
        UPDATE wn_user
        SET status = #{status}
        WHERE id = #{id}
    </update>

    <update id="updateUserLoginInfo" parameterType="com.work.work.entity.User">
        UPDATE wn_user
        SET last_login_time = #{lastLoginTime}
        <if test="lastLoginIp != null and lastLoginIp != ''">
            , last_login_ip = #{lastLoginIp}
        </if>
        WHERE id = #{id}
    </update>
    <insert id="insert" parameterType="com.work.work.entity.User">
        INSERT INTO wn_user (account, password, telphone,
                             email, money, points, avatar, reg_time, status, nickname)
        VALUES (#{account}, #{password}, #{telphone}, #{email}, #{money}, #{points}, #{avatar}, #{regTime}, #{status}, #{nickname})
    </insert>
</mapper>